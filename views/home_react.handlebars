<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">

const ItemList = (props) => { 
  console.log(props);
  const listItems = props.items.map((item) =>  <li key={item.first} onClick = {props.handleClick}>{item.first}</li>);

  return <ul>{listItems}</ul>; 
}

const ItemDetail = (props) => {
  return <div>
           <p>{props.item.first} {props.item.last}</p>
           <p>{props.item.age}</p>
           <p>{props.item.job}</p>
         </div>;  
} 

    class App extends React.Component{
      constructor(props){
          super(props);
          // Set initial state using data from server application
          this.state = {
            items: {{{ items }}},
            currentItem: {} // current selected item
          };

          // bind application state to click handler
          this.selectItem = this.selectItem.bind(this);
       }

      // handle list item clicked
      selectItem(event) {
        let found = this.state.items.find((person) => {
        return person.first === event.target.innerText;
        });
        this.setState({currentItem: found});
        console.log(event.target.innerText);
        console.log(found);
        // event.target is the HTML item clicked

      }

      render() {
        // render app UI elements
        return (
          <div>
            <ItemList items = {this.state.items} handleClick = {this.selectItem}/>
            <ItemDetail item = {this.state.currentItem} />
          </div>
          );
      }
    }

    ReactDOM.render(<App />, document.getElementById('root'));
</script>
</body>
</html>
